/* 
Step 2
Target the body element to set the background to a linear gradient angled 45 degrees clockwise, starting at rgb(118, 201, 255) and ending at rgb(247, 255, 222).

Step 3
Normalise your page's sizing, by removing the body element's margin and padding.

Step 4
Normalise your page, by setting the width to 100%, and height to 100vh.

Step 5
Remove both the horizontal and vertical scrollbars, using only one property.

Step 7
Target the .ground element, and set its width to take up the full width of the viewport. Then, set the height to 400px.

Step 8
Give the .ground element a background with a linear gradient angled 90 degrees clockwise, starting at rgb(88, 175, 236) and ending at rgb(182, 255, 255).

Step 9
As the .ground element will be third in the stacking context of the page layout, set its z-index to 3, and position to absolute.

Step 11
Target the .penguin element, and set its width and height to 300px.

Step 12
Use the margin property to horizontally center the .penguin element, and set the margin-top to 75px.

Step 14
Target the .left-mountain element, and set its width and height to 300px. Then, set the background to a linear gradient starting at rgb(203, 241, 228) and ending at rgb(80, 183, 255).

Step 15
To prevent the mountain from pushing the .ground element, adjust its position to prevent it from taking up space in the page layout.

Step 16
To make the mountain look more like a mountain, you can use the skew transform function, which takes two arguments. The first being an angle to shear the x-axis by, and the second being an angle to shear the y-axis by.

Use the transform property to skew the mountain by 0deg in the x-axis and 44deg in the y-axis.

Step 17
Set the stack level of the mountain element such that it remains directly behind the .ground element.

Step 18
To overlap the mountain and .ground elements better, give the mountain a margin-top of 100px, and the .ground element a margin-top of -58px.

Step 20
Target the .back-mountain element, and set its width and height to 300px. Then, set the background to a linear gradient starting at rgb(203, 241, 228) and ending at rgb(47, 170, 255).

Step 21
Set the position property of the .back-mountain to prevent it from taking up space in the page layout.

Step 22
Change the stack level of the .back-mountain element such that it is directly behind the .left-mountain element.

Step 23
Rotate the .back-mountain element by 45deg clockwise. Then, give it a left property of 110px, and a top property of 225px

Step 25
Give the .sun element a width and height of 200px, and a background-color of yellow.

Step 26
Set the position property of the sun to prevent it from taking up space in the page layout, and set the border-radius such that the sun's shape is a circle.

Step 27
Position the sun in the top right corner of the screen such that 75px of its top and right edges are off screen.

*/

body {
  background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100vh;
  overflow: hidden;
}

.ground {
  position: absolute;
  margin-top: -58px;
  z-index: 3;
  width: 100vw;
  height: 400px;
  background: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));
}

.penguin {
  width: 300px;
  height: 300px;
  margin: 75px auto;
}

.left-mountain {
  position: absolute;
  width: 300px;
  height: 300px;
  margin-top: 100px;
  background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));
  transform: skew(0deg, 44deg);
  z-index: 2;
}

.back-mountain {
    position: absolute;
    width: 300px;
    height: 300px;
    background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));
    z-index: 1;
    transform: rotate(45deg);
    left: 110px;
    top: 225px;
  }

  .sun {
    position: absolute;
    right: -75px;
    top: -75px;
    border-radius: 50%;
    width: 200px;
    height: 200px;
    background-color: yellow;
  }
